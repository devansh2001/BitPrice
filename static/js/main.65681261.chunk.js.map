{"version":3,"sources":["currencyDataFiles/data.js","components/CurrencyManager.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["mappingCountryCurrency","currency","country","CurrencyManager","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRequest","asyncToGenerator","regenerator_default","a","mark","_callee","code","currencyPreviousRate","currencyNewRate","change","changeColor","bgColor","endpoint","currData","_args","arguments","wrap","_context","prev","next","length","undefined","state","currencyCode","oldRates","fetch","then","response","json","data","parseFloat","replace","setState","prevState","allData","concat","toConsumableArray","catch","e","console","log","recentUpdateTime","dataMap","react_default","createElement","style","backgroundColor","className","color","toPrecision","stop","currencyIsPresent","_ref2","_callee2","_context2","preventDefault","requestedCurrencies","some","item","push","_x","apply","handleChange","event","target","value","handleRefresh","_callee3","i","_context3","currencyData","","refreshRequested","setInterval","onSubmit","index_es","onChange","map","myOption","onClick","variant","overflow","colSpan","Component","Header","src","App","react_router_dom","basename","components_Header","components_CurrencyManager","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65681261.chunk.js","sourcesContent":["const mappingCountryCurrency = [\n  {\n    \"currency\":\"AED\",\n    \"country\":\"United Arab Emirates Dirham\"\n  },\n  {\n    \"currency\":\"AFN\",\n    \"country\":\"Afghan Afghani\"\n  },\n  {\n    \"currency\":\"ALL\",\n    \"country\":\"Albanian Lek\"\n  },\n  {\n    \"currency\":\"AMD\",\n    \"country\":\"Armenian Dram\"\n  },\n  {\n    \"currency\":\"ANG\",\n    \"country\":\"Netherlands Antillean Guilder\"\n  },\n  {\n    \"currency\":\"AOA\",\n    \"country\":\"Angolan Kwanza\"\n  },\n  {\n    \"currency\":\"ARS\",\n    \"country\":\"Argentine Peso\"\n  },\n  {\n    \"currency\":\"AUD\",\n    \"country\":\"Australian Dollar\"\n  },\n  {\n    \"currency\":\"AWG\",\n    \"country\":\"Aruban Florin\"\n  },\n  {\n    \"currency\":\"AZN\",\n    \"country\":\"Azerbaijani Manat\"\n  },\n  {\n    \"currency\":\"BAM\",\n    \"country\":\"Bosnia-Herzegovina Convertible Mark\"\n  },\n  {\n    \"currency\":\"BBD\",\n    \"country\":\"Barbadian Dollar\"\n  },\n  {\n    \"currency\":\"BDT\",\n    \"country\":\"Bangladeshi Taka\"\n  },\n  {\n    \"currency\":\"BGN\",\n    \"country\":\"Bulgarian Lev\"\n  },\n  {\n    \"currency\":\"BHD\",\n    \"country\":\"Bahraini Dinar\"\n  },\n  {\n    \"currency\":\"BIF\",\n    \"country\":\"Burundian Franc\"\n  },\n  {\n    \"currency\":\"BMD\",\n    \"country\":\"Bermudan Dollar\"\n  },\n  {\n    \"currency\":\"BND\",\n    \"country\":\"Brunei Dollar\"\n  },\n  {\n    \"currency\":\"BOB\",\n    \"country\":\"Bolivian Boliviano\"\n  },\n  {\n    \"currency\":\"BRL\",\n    \"country\":\"Brazilian Real\"\n  },\n  {\n    \"currency\":\"BSD\",\n    \"country\":\"Bahamian Dollar\"\n  },\n  {\n    \"currency\":\"BTC\",\n    \"country\":\"Bitcoin\"\n  },\n  {\n    \"currency\":\"BTN\",\n    \"country\":\"Bhutanese Ngultrum\"\n  },\n  {\n    \"currency\":\"BWP\",\n    \"country\":\"Botswanan Pula\"\n  },\n  {\n    \"currency\":\"BYR\",\n    \"country\":\"Belarusian Ruble\"\n  },\n  {\n    \"currency\":\"BZD\",\n    \"country\":\"Belize Dollar\"\n  },\n  {\n    \"currency\":\"CAD\",\n    \"country\":\"Canadian Dollar\"\n  },\n  {\n    \"currency\":\"CDF\",\n    \"country\":\"Congolese Franc\"\n  },\n  {\n    \"currency\":\"CHF\",\n    \"country\":\"Swiss Franc\"\n  },\n  {\n    \"currency\":\"CLF\",\n    \"country\":\"Chilean Unit of Account (UF)\"\n  },\n  {\n    \"currency\":\"CLP\",\n    \"country\":\"Chilean Peso\"\n  },\n  {\n    \"currency\":\"CNY\",\n    \"country\":\"Chinese Yuan\"\n  },\n  {\n    \"currency\":\"COP\",\n    \"country\":\"Colombian Peso\"\n  },\n  {\n    \"currency\":\"CRC\",\n    \"country\":\"Costa Rican Col\\u00f3n\"\n  },\n  {\n    \"currency\":\"CUP\",\n    \"country\":\"Cuban Peso\"\n  },\n  {\n    \"currency\":\"CVE\",\n    \"country\":\"Cape Verdean Escudo\"\n  },\n  {\n    \"currency\":\"CZK\",\n    \"country\":\"Czech Republic Koruna\"\n  },\n  {\n    \"currency\":\"DJF\",\n    \"country\":\"Djiboutian Franc\"\n  },\n  {\n    \"currency\":\"DKK\",\n    \"country\":\"Danish Krone\"\n  },\n  {\n    \"currency\":\"DOP\",\n    \"country\":\"Dominican Peso\"\n  },\n  {\n    \"currency\":\"DZD\",\n    \"country\":\"Algerian Dinar\"\n  },\n  {\n    \"currency\":\"EEK\",\n    \"country\":\"Estonian Kroon\"\n  },\n  {\n    \"currency\":\"EGP\",\n    \"country\":\"Egyptian Pound\"\n  },\n  {\n    \"currency\":\"ERN\",\n    \"country\":\"Eritrean Nnakfa\"\n  },\n  {\n    \"currency\":\"ETB\",\n    \"country\":\"Ethiopian Birr\"\n  },\n  {\n    \"currency\":\"EUR\",\n    \"country\":\"Euro\"\n  },\n  {\n    \"currency\":\"FJD\",\n    \"country\":\"Fijian Dollar\"\n  },\n  {\n    \"currency\":\"FKP\",\n    \"country\":\"Falkland Islands Pound\"\n  },\n  {\n    \"currency\":\"GBP\",\n    \"country\":\"British Pound Sterling\"\n  },\n  {\n    \"currency\":\"GEL\",\n    \"country\":\"Georgian Lari\"\n  },\n  {\n    \"currency\":\"GHS\",\n    \"country\":\"Ghanaian Cedi\"\n  },\n  {\n    \"currency\":\"GIP\",\n    \"country\":\"Gibraltar Pound\"\n  },\n  {\n    \"currency\":\"GMD\",\n    \"country\":\"Gambian Dalasi\"\n  },\n  {\n    \"currency\":\"GNF\",\n    \"country\":\"Guinean Franc\"\n  },\n  {\n    \"currency\":\"GTQ\",\n    \"country\":\"Guatemalan Quetzal\"\n  },\n  {\n    \"currency\":\"GYD\",\n    \"country\":\"Guyanaese Dollar\"\n  },\n  {\n    \"currency\":\"HKD\",\n    \"country\":\"Hong Kong Dollar\"\n  },\n  {\n    \"currency\":\"HNL\",\n    \"country\":\"Honduran Lempira\"\n  },\n  {\n    \"currency\":\"HRK\",\n    \"country\":\"Croatian Kuna\"\n  },\n  {\n    \"currency\":\"HTG\",\n    \"country\":\"Haitian Gourde\"\n  },\n  {\n    \"currency\":\"HUF\",\n    \"country\":\"Hungarian Forint\"\n  },\n  {\n    \"currency\":\"IDR\",\n    \"country\":\"Indonesian Rupiah\"\n  },\n  {\n    \"currency\":\"ILS\",\n    \"country\":\"Israeli New Sheqel\"\n  },\n  {\n    \"currency\":\"INR\",\n    \"country\":\"Indian Rupee\"\n  },\n  {\n    \"currency\":\"IQD\",\n    \"country\":\"Iraqi Dinar\"\n  },\n  {\n    \"currency\":\"IRR\",\n    \"country\":\"Iranian Rial\"\n  },\n  {\n    \"currency\":\"ISK\",\n    \"country\":\"Icelandic Kr\\u00f3na\"\n  },\n  {\n    \"currency\":\"JEP\",\n    \"country\":\"Jersey Pound\"\n  },\n  {\n    \"currency\":\"JMD\",\n    \"country\":\"Jamaican Dollar\"\n  },\n  {\n    \"currency\":\"JOD\",\n    \"country\":\"Jordanian Dinar\"\n  },\n  {\n    \"currency\":\"JPY\",\n    \"country\":\"Japanese Yen\"\n  },\n  {\n    \"currency\":\"KES\",\n    \"country\":\"Kenyan Shilling\"\n  },\n  {\n    \"currency\":\"KGS\",\n    \"country\":\"Kyrgystani Som\"\n  },\n  {\n    \"currency\":\"KHR\",\n    \"country\":\"Cambodian Riel\"\n  },\n  {\n    \"currency\":\"KMF\",\n    \"country\":\"Comorian Franc\"\n  },\n  {\n    \"currency\":\"KPW\",\n    \"country\":\"North Korean Won\"\n  },\n  {\n    \"currency\":\"KRW\",\n    \"country\":\"South Korean Won\"\n  },\n  {\n    \"currency\":\"KWD\",\n    \"country\":\"Kuwaiti Dinar\"\n  },\n  {\n    \"currency\":\"KYD\",\n    \"country\":\"Cayman Islands Dollar\"\n  },\n  {\n    \"currency\":\"KZT\",\n    \"country\":\"Kazakhstani Tenge\"\n  },\n  {\n    \"currency\":\"LAK\",\n    \"country\":\"Laotian Kip\"\n  },\n  {\n    \"currency\":\"LBP\",\n    \"country\":\"Lebanese Pound\"\n  },\n  {\n    \"currency\":\"LKR\",\n    \"country\":\"Sri Lankan Rupee\"\n  },\n  {\n    \"currency\":\"LRD\",\n    \"country\":\"Liberian Dollar\"\n  },\n  {\n    \"currency\":\"LSL\",\n    \"country\":\"Lesotho Loti\"\n  },\n  {\n    \"currency\":\"LTL\",\n    \"country\":\"Lithuanian Litas\"\n  },\n  {\n    \"currency\":\"LVL\",\n    \"country\":\"Latvian Lats\"\n  },\n  {\n    \"currency\":\"LYD\",\n    \"country\":\"Libyan Dinar\"\n  },\n  {\n    \"currency\":\"MAD\",\n    \"country\":\"Moroccan Dirham\"\n  },\n  {\n    \"currency\":\"MDL\",\n    \"country\":\"Moldovan Leu\"\n  },\n  {\n    \"currency\":\"MGA\",\n    \"country\":\"Malagasy Ariary\"\n  },\n  {\n    \"currency\":\"MKD\",\n    \"country\":\"Macedonian Denar\"\n  },\n  {\n    \"currency\":\"MMK\",\n    \"country\":\"Myanma Kyat\"\n  },\n  {\n    \"currency\":\"MNT\",\n    \"country\":\"Mongolian Tugrik\"\n  },\n  {\n    \"currency\":\"MOP\",\n    \"country\":\"Macanese Pataca\"\n  },\n  {\n    \"currency\":\"MRO\",\n    \"country\":\"Mauritanian Ouguiya\"\n  },\n  {\n    \"currency\":\"MTL\",\n    \"country\":\"Maltese Lira\"\n  },\n  {\n    \"currency\":\"MUR\",\n    \"country\":\"Mauritian Rupee\"\n  },\n  {\n    \"currency\":\"MVR\",\n    \"country\":\"Maldivian Rufiyaa\"\n  },\n  {\n    \"currency\":\"MWK\",\n    \"country\":\"Malawian Kwacha\"\n  },\n  {\n    \"currency\":\"MXN\",\n    \"country\":\"Mexican Peso\"\n  },\n  {\n    \"currency\":\"MYR\",\n    \"country\":\"Malaysian Ringgit\"\n  },\n  {\n    \"currency\":\"MZN\",\n    \"country\":\"Mozambican Metical\"\n  },\n  {\n    \"currency\":\"NAD\",\n    \"country\":\"Namibian Dollar\"\n  },\n  {\n    \"currency\":\"NGN\",\n    \"country\":\"Nigerian Naira\"\n  },\n  {\n    \"currency\":\"NIO\",\n    \"country\":\"Nicaraguan C\\u00f3rdoba\"\n  },\n  {\n    \"currency\":\"NOK\",\n    \"country\":\"Norwegian Krone\"\n  },\n  {\n    \"currency\":\"NPR\",\n    \"country\":\"Nepalese Rupee\"\n  },\n  {\n    \"currency\":\"NZD\",\n    \"country\":\"New Zealand Dollar\"\n  },\n  {\n    \"currency\":\"OMR\",\n    \"country\":\"Omani Rial\"\n  },\n  {\n    \"currency\":\"PAB\",\n    \"country\":\"Panamanian Balboa\"\n  },\n  {\n    \"currency\":\"PEN\",\n    \"country\":\"Peruvian Nuevo Sol\"\n  },\n  {\n    \"currency\":\"PGK\",\n    \"country\":\"Papua New Guinean Kina\"\n  },\n  {\n    \"currency\":\"PHP\",\n    \"country\":\"Philippine Peso\"\n  },\n  {\n    \"currency\":\"PKR\",\n    \"country\":\"Pakistani Rupee\"\n  },\n  {\n    \"currency\":\"PLN\",\n    \"country\":\"Polish Zloty\"\n  },\n  {\n    \"currency\":\"PYG\",\n    \"country\":\"Paraguayan Guarani\"\n  },\n  {\n    \"currency\":\"QAR\",\n    \"country\":\"Qatari Rial\"\n  },\n  {\n    \"currency\":\"RON\",\n    \"country\":\"Romanian Leu\"\n  },\n  {\n    \"currency\":\"RSD\",\n    \"country\":\"Serbian Dinar\"\n  },\n  {\n    \"currency\":\"RUB\",\n    \"country\":\"Russian Ruble\"\n  },\n  {\n    \"currency\":\"RWF\",\n    \"country\":\"Rwandan Franc\"\n  },\n  {\n    \"currency\":\"SAR\",\n    \"country\":\"Saudi Riyal\"\n  },\n  {\n    \"currency\":\"SBD\",\n    \"country\":\"Solomon Islands Dollar\"\n  },\n  {\n    \"currency\":\"SCR\",\n    \"country\":\"Seychellois Rupee\"\n  },\n  {\n    \"currency\":\"SDG\",\n    \"country\":\"Sudanese Pound\"\n  },\n  {\n    \"currency\":\"SEK\",\n    \"country\":\"Swedish Krona\"\n  },\n  {\n    \"currency\":\"SGD\",\n    \"country\":\"Singapore Dollar\"\n  },\n  {\n    \"currency\":\"SHP\",\n    \"country\":\"Saint Helena Pound\"\n  },\n  {\n    \"currency\":\"SLL\",\n    \"country\":\"Sierra Leonean Leone\"\n  },\n  {\n    \"currency\":\"SOS\",\n    \"country\":\"Somali Shilling\"\n  },\n  {\n    \"currency\":\"SRD\",\n    \"country\":\"Surinamese Dollar\"\n  },\n  {\n    \"currency\":\"STD\",\n    \"country\":\"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe Dobra\"\n  },\n  {\n    \"currency\":\"SVC\",\n    \"country\":\"Salvadoran Col\\u00f3n\"\n  },\n  {\n    \"currency\":\"SYP\",\n    \"country\":\"Syrian Pound\"\n  },\n  {\n    \"currency\":\"SZL\",\n    \"country\":\"Swazi Lilangeni\"\n  },\n  {\n    \"currency\":\"THB\",\n    \"country\":\"Thai Baht\"\n  },\n  {\n    \"currency\":\"TJS\",\n    \"country\":\"Tajikistani Somoni\"\n  },\n  {\n    \"currency\":\"TMT\",\n    \"country\":\"Turkmenistani Manat\"\n  },\n  {\n    \"currency\":\"TND\",\n    \"country\":\"Tunisian Dinar\"\n  },\n  {\n    \"currency\":\"TOP\",\n    \"country\":\"Tongan Pa?anga\"\n  },\n  {\n    \"currency\":\"TRY\",\n    \"country\":\"Turkish Lira\"\n  },\n  {\n    \"currency\":\"TTD\",\n    \"country\":\"Trinidad and Tobago Dollar\"\n  },\n  {\n    \"currency\":\"TWD\",\n    \"country\":\"New Taiwan Dollar\"\n  },\n  {\n    \"currency\":\"TZS\",\n    \"country\":\"Tanzanian Shilling\"\n  },\n  {\n    \"currency\":\"UAH\",\n    \"country\":\"Ukrainian Hryvnia\"\n  },\n  {\n    \"currency\":\"UGX\",\n    \"country\":\"Ugandan Shilling\"\n  },\n  {\n    \"currency\":\"USD\",\n    \"country\":\"United States Dollar\"\n  },\n  {\n    \"currency\":\"UYU\",\n    \"country\":\"Uruguayan Peso\"\n  },\n  {\n    \"currency\":\"UZS\",\n    \"country\":\"Uzbekistan Som\"\n  },\n  {\n    \"currency\":\"VEF\",\n    \"country\":\"Venezuelan Bol\\u00edvar Fuerte\"\n  },\n  {\n    \"currency\":\"VND\",\n    \"country\":\"Vietnamese Dong\"\n  },\n  {\n    \"currency\":\"VUV\",\n    \"country\":\"Vanuatu Vatu\"\n  },\n  {\n    \"currency\":\"WST\",\n    \"country\":\"Samoan Tala\"\n  },\n  {\n    \"currency\":\"XAF\",\n    \"country\":\"CFA Franc BEAC\"\n  },\n  {\n    \"currency\":\"XAG\",\n    \"country\":\"Silver (troy ounce)\"\n  },\n  {\n    \"currency\":\"XAU\",\n    \"country\":\"Gold (troy ounce)\"\n  },\n  {\n    \"currency\":\"XBT\",\n    \"country\":\"Bitcoin\"\n  },\n  {\n    \"currency\":\"XCD\",\n    \"country\":\"East Caribbean Dollar\"\n  },\n  {\n    \"currency\":\"XDR\",\n    \"country\":\"Special Drawing Rights\"\n  },\n  {\n    \"currency\":\"XOF\",\n    \"country\":\"CFA Franc BCEAO\"\n  },\n  {\n    \"currency\":\"XPF\",\n    \"country\":\"CFP Franc\"\n  },\n  {\n    \"currency\":\"YER\",\n    \"country\":\"Yemeni Rial\"\n  },\n  {\n    \"currency\":\"ZAR\",\n    \"country\":\"South African Rand\"\n  },\n  {\n    \"currency\":\"ZMK\",\n    \"country\":\"Zambian Kwacha (pre-2013)\"\n  },\n  {\n    \"currency\":\"ZMW\",\n    \"country\":\"Zambian Kwacha\"\n  },\n  {\n    \"currency\":\"ZWL\",\n    \"country\":\"Zimbabwean Dollar\"\n  }\n];\n\nexport default mappingCountryCurrency;","import React, {Component} from 'react'\nimport mappingCountryCurrency from '../currencyDataFiles/data.js'\nimport {Button, Select, MenuItem} from '@material-ui/core';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nclass CurrencyManager extends Component {\n  constructor(props) {\n    super(props);\n    this.currencyData = mappingCountryCurrency;\n    this.requestedCurrencies = [];\n    this.oldRates = {\n      \"\": 0.00\n    };\n    this.state = {\n      currencyCode: 'AED',\n      allData: [],\n      dataMap: [],\n      refreshRequested: false\n    };\n    this.recentUpdateTime = this.state.allData[0] ? this.state.allData['time']['updated'] : '';\n    setInterval(this.handleRefresh, 60000);\n    this.handleRequest('USD');\n  }\n\n\n  handleRequest =  async (code = this.state.currencyCode) => {\n    let currencyPreviousRate = this.oldRates[code] || 0.0000;\n    let currencyNewRate = 0.0000;\n    let change = 0.00000000000000000000000;\n    let changeColor = 'black';\n    let bgColor = 'white';\n    // console.log(this.requestedCurrencies);\n    let mainURL = 'https://api.coindesk.com/v1/bpi/currentprice/';\n    let jsonWord = '.json';\n    let endpoint = mainURL + code + jsonWord;\n    let currData = {};\n    await fetch(endpoint)\n        .then(response => response.json())\n        .then(data => {currData = data;\n        // console.log('OLD: ' + this.oldRates[code]);\n        currencyNewRate = parseFloat(currData['bpi'][code]['rate'].replace(/[,]/, ''));\n        this.oldRates[code] = currencyNewRate;\n        change = (currencyNewRate - currencyPreviousRate) / currencyPreviousRate;\n        // console.log('Rates Below:----');\n        // console.log(currencyNewRate - currencyPreviousRate);\n        // console.log(currencyPreviousRate);\n        // console.log('----');\n        // console.log('INF: ' + isFinite(change));\n        // console.log('NaN: ' + isNaN(change));\n        if (currencyPreviousRate == 0) {\n          change = 0;\n        }\n        if (change > 0) {\n          changeColor = 'green';\n          bgColor ='#CAF2BC'\n        } else if (change < 0) {\n          changeColor = 'red';\n          bgColor ='#F2BCBC'\n        } else {\n          changeColor = 'black';\n          bgColor = 'white'\n        }\n        // console.log('Changed Rate to ' + currencyNewRate);\n        this.setState(prevState => ({\n            allData: [...prevState.allData, data]\n          }))}\n        ).catch(e => console.log(e));\n    this.recentUpdateTime = this.state.allData[0] ? this.state.allData[0]['time']['updated'] : '';\n    // console.log(currData);\n    // console.log('Yeah! I got this');\n    change *= 100;\n    await this.setState(prevState => ({\n      dataMap: [...prevState.dataMap,\n            <tr style={{backgroundColor: bgColor}}>\n              <td className={'row-normal'}>{code}</td>\n              <td className={'row-normal'}>{currencyPreviousRate}</td>\n              <td className={'row-normal'}>{currencyNewRate}</td>\n              <td className={'row-normal'}>{currencyPreviousRate == 0 ? 0 : (1/currencyPreviousRate)}</td>\n              <td className={'row-normal'}>{1/currencyNewRate}</td>\n              <td style={{color: changeColor}} className={'row-normal'}>{change.toPrecision(5)}%</td>\n            </tr>\n      ]\n    }));\n    // console.log(this.state.allData);\n    //\n    // console.log('Old Rate: ' + currencyPreviousRate);\n    // console.log('New Rate: ' + currencyNewRate);\n    // console.log('Change Percent: ' + ((currencyNewRate - currencyPreviousRate) / currencyPreviousRate));\n    // console.log('Old array: ' + this.oldRates);\n  };\n\n  currencyIsPresent = async (e) => {\n    e.preventDefault(e);\n    if (this.requestedCurrencies.some(item => item === this.state.currencyCode)) {\n      // console.log('TRUE');\n    } else {\n      // console.log('FALSE');\n      await this.requestedCurrencies.push(this.state.currencyCode);\n      await this.handleRequest();\n    }\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      currencyCode: event.target.value\n    })\n  };\n\n\n  handleRefresh = async () => {\n    await this.setState({\n      dataMap: [],\n      allData: []\n    });\n    // await console.log('Set state');\n    this.handleRequest('USD');\n    for (let i = 0; i < this.requestedCurrencies.length; i++) {\n      await this.handleRequest(this.requestedCurrencies[i]);\n    }\n    // await console.log('Handled Requests');\n  };\n\n\n  render() {\n    // console.log('Rendering');\n    return (\n        <div className='currency-manager'>\n          <form className={'input-form'} onSubmit={this.currencyIsPresent}>\n            Select Currency:\n            <Select className={'form-field'} value={this.state.currencyCode} onChange={this.handleChange}>\n              {this.currencyData.map(myOption => <MenuItem value={myOption['currency']}>{myOption['currency']}, {myOption['country']}</MenuItem>)}\n            </Select>\n            <Button className={'form-field'} onClick={this.currencyIsPresent} variant=\"contained\" color=\"primary\">\n              Get Rate\n            </Button>\n            <Button className={'form-field refresh-temp'} onClick={this.handleRefresh} variant=\"contained\" color=\"secondary\">\n              Refresh\n            </Button>\n            {/*<button>Submit</button>*/}\n            {/*<button onClick={this.handleRefresh}>Refresh</button>*/}\n            <br/>\n          </form>\n          {/*<input type='text' value={this.state.currencyCode} onChange={this.handleChange}/>*/}\n          <table className='data-table table-responsive' style={{overflow: \"scroll\"}}>\n            <tr>\n              <th className='secondary-cols'>Currency</th>\n              <th className={'primary-cols'} colSpan={2}>Buy</th>\n              <th className={'primary-cols'} colSpan={2}>Sell</th>\n              <th className='secondary-cols'>Change</th>\n            </tr>\n            <tr>\n              <th className={'secondary-children'}></th>\n              <th className={'primary-children'}>Old</th>\n              <th className={'primary-children'}>New</th>\n              <th className={'primary-children'}>Old</th>\n              <th className={'primary-children'}>New</th>\n              <th className={'secondary-children'}></th>\n            </tr>\n            {this.state.dataMap}\n          </table>\n\n          <br/>\n          <br/>\n          <div className={'footer-time'}>\n            <h4>Updated {this.recentUpdateTime}</h4>\n          </div>\n        </div>\n    );\n  }\n}\n// {this.state.allData[0]['time']['updated'] === '' ? '' : this.state.allData[this.state.allData.length - 1]['time']['updated']}\nexport default CurrencyManager;","import React, {Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nclass Header extends Component {\n\n  render() {\n    return (\n        <div className='row header-div '>\n          <img className={'.float-left img-fluid bitcoin-img'} src='https://en.bitcoin.it/w/images/en/2/29/BC_Logo_.png'/>\n          <h1 className='col-md-9  text-left head d-none d-md-block'>Bitcoin Exchange Rates</h1>\n        </div>\n\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport CurrencyManager from \"./components/CurrencyManager\";\nimport Header from \"./components/Header\";\n\nimport {HashRouter, Route, Link} from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n      <HashRouter basename='/'>\n        <div>\n          <Header/>\n          <CurrencyManager/>\n          {/*{myRequest()}*/}\n        </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}